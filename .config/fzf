#!/bin/sh

case $- in
    *i*) ;;
    *) return
esac

# Find fzf installation
if [ -z "$FZF_BASE" ]; then
    fzf_dirs="
        ${XDG_DATA_HOME:-$HOME/.local/share}/fzf
        $HOME/.fzf
        /usr/local/opt/fzf
        /usr/share/fzf
    "
    for dir in $fzf_dirs; do
        if [ -d "$dir" ]; then
            FZF_BASE="$dir"
            break
        fi
    done
fi

if [ -n "$FZF_BASE" ]; then
    # Add fzf to path if it's not already there
    if ! command -v fzf >/dev/null 2>&1 && [ -d "$FZF_BASE"/bin ]; then
        export PATH="$FZF_BASE/bin:$PATH"
    fi

    if [ ! -d "$FZF_BASE/"shell ]; then
        FZF_SHELL="$FZF_BASE"
    else
        FZF_SHELL="$FZF_BASE"/shell
    fi

    # Set up completion and key bindings
    if [ -n "$BASH_VERSION" ]; then
        . "$FZF_SHELL"/key-bindings.bash 2>/dev/null
    elif [ -n "$ZSH_VERSION" ]; then
        . "$FZF_SHELL"/key-bindings.zsh 2>/dev/null
    fi

    # Set default command
    if command -v fd >/dev/null 2>&1; then
        export FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --exclude .git"
        export FZF_ALT_C_COMMAND="fd -t d"
        _fzf_compgen_path() {
            fd --hidden --follow --exclude ".git" . "$@"
        }
        _fzf_compgen_dir() {
            fd --type d --hidden --follow --exclude ".git" . "$@"
        }
    elif command -v rg >/dev/null 2>&1; then
        export FZF_DEFAULT_COMMAND="rg --files --hidden --glob '!.git'"
        _fzf_compgen_path() {
            rg --files --hidden --glob '!.git' "$@"
        }
    elif command -v ag >/dev/null 2>&1; then
        export FZF_DEFAULT_COMMAND="ag -g ''"
        _fzf_compgen_path() {
            ag -g '' "$@"
        }
    fi

    if [ -n "$FZF_DEFAULT_COMMAND" ]; then
        export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    fi

    export FZF_DEFAULT_OPTS="--height=10 --reverse --no-info --no-color --cycle"
fi
