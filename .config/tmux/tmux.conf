# Change prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix
bind a last-window

# Report $TERM as tmux-256color
# Some systems don't have this description in their terminfo database.  If that
# is the case then this will cause errors. The solution is to either install
# the tmux-256color terminfo description or change this value to
# screen-256color.
set -s default-terminal tmux-256color

# Enable true colors
set -as terminal-overrides ",*:Tc"

# Set time (in milliseconds) for which tmux waits after an escape key to see if
# it's part of a key combination
set -s escape-time 0

# Using `default-command $SHELL` with `default-shell /bin/sh` will cause new
# tmux windows to be spawned using
#
#       /bin/sh -c $SHELL
#
# This ensures that new windows are created as non-login interactive shells
set -g default-shell /bin/sh
set -g default-command fish

# Automatically renumber windows when one is closed
set -g renumber-windows on

# Increase scrollback buffer size
set -g history-limit 5000

# Use readline (emacs) keys on the tmux command line
set -g status-keys emacs

# Enable focus events
set -g focus-events on

# Use vi keys in copy mode
set -gw mode-keys vi

# Enable mouse
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# Start window indexing at 1 instead of 0
set -g base-index 1

# Don't detach client when session is destroyed
set -g detach-on-destroy off

# Status bar
set -g status-left ""
set -g status-right "#[#{E:@prefix-style}]#{?client_prefix, P ,}#[default] #[#{E:status-right-style}]#h / #S "
set -gw window-status-format " #[#{E:@window-index-style}]#I#[#{E:window-status-style}] #W#F "
set -gw window-status-current-format " #[#{E:@window-index-style}]#I#[#{E:window-status-current-style}] #W#F "
set -gw window-status-separator ""

# Reload tmux.conf
bind R source-file ~/.config/tmux/tmux.conf \; display-message "Reloaded tmux.conf"

# Use prefix + \ and prefix + - to split the current pane
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Use prefix + | and prefix + _ to split the current window along its full
# height/width
bind | split-window -f -h -c "#{pane_current_path}"
bind _ split-window -f -v -c "#{pane_current_path}"

# New windows should start in the same directory as the current one
bind c new-window -c "#{pane_current_path}"

# Make switching between windows easier
bind C-p previous-window
bind C-n next-window

# Use vi-style key bindings to navigate between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

# Make u and d scroll up/down in copy mode (like a pager)
bind -T copy-mode-vi u send-keys -X halfpage-up
bind -T copy-mode-vi d send-keys -X halfpage-down

# Clear selection in copy mode with (C-L)
bind -T copy-mode-vi C-l send-keys -X clear-selection

# Use prefix + < or prefix + > to move windows
bind < swap-window -d -t -1
bind > swap-window -d -t +1

# Easily resize panes with prefix + H/J/K/L
# The -r flag means these are repeatable
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Make vi copy mode more vim-like
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Search directly from "normal" mode
bind / copy-mode \; command-prompt -p "(search up)" "send -X search-backward \"%%%\""

# Search for URLs
bind C-u copy-mode \; send-keys -X search-backward "(https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*"

# Search for files
bind C-f copy-mode \; send-keys -X search-backward "(^|^\.|[[:space:]]|[[:space:]]\.|[[:space:]]\.\.|^\.\.)[[:alnum:]~_-]*/[][[:alnum:]_.#$%&+=/@-]*"

# Call open on the current selection
bind -T copy-mode-vi O send-keys -X copy-pipe-and-cancel "xargs -I {} tmux run-shell -b 'cd #{pane_current_path}; open \"{}\" >/dev/null'"

# Switch to client by name (mnemonic: "goto client")
bind g list-sessions -F "#{session_name}" \; command-prompt -p "session:" "send-keys C-c; switch-client -t '%%'"

# Switch to last used client
bind S switch-client -l

# Prompt for new session name and create it
bind C command-prompt -p "session name:" "new-session -A -s '%%'"

# Kill current session
bind X confirm-before -p "kill session? (y/n)" kill-session

# Open email client in new window
bind C-m new-window -c ~ mutt

# Set color scheme
TMUX_COLORS=base16
if "test -r $HOME/.config/tmux/colors/$TMUX_COLORS.conf" "source $HOME/.config/tmux/colors/$TMUX_COLORS.conf"
setenv -gu TMUX_COLORS
